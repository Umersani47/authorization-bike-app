c
@current_user.role
has_permission?('can_purchase')
c
User.all.as_json(include: :role)
@users.as_json(include: :role)
@users
c
request.headers['Authorization']
c
request.headers['Authorization']
params
action
c
@current_user
c
@current_user
request.headers['Authorization']
@current_user
c
current_user
@current_user
request.headers['Authorization']
c
@current_user
c
@current_user
c
@current_user
c
@current_user
c
@current_user
@current_user.is_admin?
c
current_user
@current_user
request.header
params
c
params
@role.save!
c
n
@bike.quantity - 1
@bike.quantity
c
@current_user
c
JWT.decode(token, 'bcf950692d6472557bf80f88431134acb9e6582aa8ec0aadfc141fa7f91821b37d6ca2f8a7b9194977800147b3563d8d270bbb2e52d0278bd54c6f013a5a549d', true, algorithm: 'HS256')
JWT.decode(token, 'bcf950692d6472557bf80f88431134acb9e6582aa8ec0aadfc141fa7f91821b37d6ca2f8a7b9194977800147b3563d8d270bbb2e52d0278bd54c6f013a5a549d'), true, algorithm: 'HS256')
JWT.decode(token, Rails.application.credentials.dig(:devise, :jwt_secret_key), true, algorithm: 'HS256')
token = request.headers['Authorization']
request.headers['Authorization']
c
params
@users
@user
request.headers
current_user
c
request.headers
request
params
current_user
c
request.headers
request.header
request
params
c
current_user
params
c
params[:permissions]
params[:role]
params[role]
params
